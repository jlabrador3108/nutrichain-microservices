
filter {
	if [table] == 'product'
		or [table] == 'unit_measurement' 
		or [table] == 'category_food'
	{
		ruby {
			code => 'event.set("log_info", "Entered if block")'
		}
		jdbc_streaming {
			jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql.jar"
			jdbc_connection_string => "jdbc:mysql://${HOST}:${PORT}/${DATABASE}"
			jdbc_user => "${USERNAME}"
			jdbc_password => "${PASSWORD}"
			jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
			parameters => {
				"updatedAt" => "%{[updatedAt]}"
			}
			target => "data"
			statement => "select
				p.id,
				p.updatedAt,
				
				JSON_OBJECT(
				'name',
				p.name,
				'description',
				p.description,
				'id',
				p.id,
				'categoryFoodId',
				p.categoryFoodId,
				'unitMeasurementId',
				p.unitMeasurementId,
				'sku',
				p.sku,
				'imageUrl',
				p.imageUrl,
				'weight',
				p.`weight`,
				'createdAt', 
				p.createdAt, 
				'updatedAt', 
				p.updatedAt, 
				'deletedAt', 
				p.deletedAt ) AS origin,
				 	
				JSON_OBJECT(
				'id',
				cf.id,
				'name',
				cf.name,
				'createdAt', 
				cf.createdAt, 
				'updatedAt', 
				cf.updatedAt, 
				'deletedAt', 
				cf.deletedAt
				) AS category_food,

				JSON_OBJECT(
				'id',
				um.id,
				'name',
				um.name,
				'abbreviation',
				um.abbreviation,
				'createdAt', 
				um.createdAt, 
				'updatedAt', 
				um.updatedAt, 
				'deletedAt', 
				um.deletedAt
				) AS unit_measurement

				From product p 
				LEFT JOIN category_food cf ON (p.categoryFoodId = cf.id AND cf.deletedAt IS NULL)				
				LEFT JOIN unit_measurement um ON (p.unitMeasurementId = um.id AND um.deletedAt IS NULL)	
				WHERE p.deletedAt IS NULL AND (GREATEST( p.updatedAt, cf.updatedAt, um.updatedAt) >= :updatedAt
						);"
		}
		mutate {
			add_field => {
				"[@metadata][type]" => "product"
			}
		}
	}
	if [deletedAt] {
      drop { }
    }
}